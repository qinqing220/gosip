//line parser.rl:1
// -*-go-*-
//
// SDP message parser
package sdp

//line parser.rl:7

//line parser.go:12
var _sdp_actions []byte = []byte{
	0, 1, 0, 1, 1, 1, 2, 1, 3,
	1, 4, 1, 5, 1, 6, 1, 7,
	1, 8, 1, 9, 1, 10, 1, 11,
	1, 12, 1, 13, 1, 14, 1, 15,
	1, 16, 1, 17, 1, 18, 1, 19,
	1, 20, 1, 21, 1, 22, 1, 23,
	1, 24, 1, 25, 1, 26, 1, 27,
	1, 28, 1, 30, 2, 29, 0,
}

var _sdp_key_offsets []int16 = []int16{
	0, 0, 1, 2, 4, 5, 6, 7,
	8, 11, 15, 17, 20, 22, 25, 38,
	52, 65, 79, 99, 113, 114, 115, 116,
	119, 122, 123, 130, 131, 144, 158, 160,
	163, 164, 166, 167, 169, 172, 174, 177,
	178, 179, 192, 207, 208, 209, 222, 236,
	238, 242, 255, 268, 281, 296, 297, 298,
	311, 325, 327, 330, 331, 332, 336, 337,
	338, 339, 340, 341, 342, 345, 348, 349,
	350, 351, 352, 353, 354, 355, 356, 357,
	358, 359, 360, 361, 374, 388, 401, 415,
	436, 450, 472, 474, 475, 497, 519, 533,
	540, 550, 552, 555, 557, 560, 562, 565,
	568, 571, 572, 575, 576, 586, 596, 599,
	608, 617, 626, 635, 644, 653, 656, 662,
	672, 682, 692, 694, 697, 700, 701, 710,
	734, 758, 780, 794, 808, 822, 836, 850,
	865, 867, 871, 875, 877, 892, 905, 919,
	933, 947, 961, 983, 984, 985, 988, 991,
	992, 1005, 1007, 1010, 1013, 1016, 1017, 1019,
	1026, 1028, 1036, 1038, 1039, 1040, 1042, 1044,
	1046, 1048, 1050, 1052, 1054, 1056, 1058, 1060,
	1063, 1066, 1068, 1076, 1077, 1079, 1081, 1082,
	1095, 1109, 1122, 1136, 1157, 1171, 1193, 1195,
	1196, 1218, 1240, 1254, 1261, 1271, 1273, 1276,
	1278, 1281, 1283, 1286, 1289, 1292, 1293, 1296,
	1297, 1307, 1317, 1320, 1329, 1338, 1347, 1356,
	1365, 1374, 1377, 1383, 1393, 1403, 1413, 1415,
	1418, 1421, 1422, 1431, 1455, 1479, 1501, 1515,
	1529, 1543, 1557, 1571, 1586, 1588, 1592, 1596,
	1598, 1613, 1626, 1640, 1654, 1668, 1682, 1704,
	1705, 1706, 1709, 1712, 1713, 1718, 1719, 1722,
	1725, 1726, 1730, 1731, 1734, 1737, 1738, 1744,
	1745, 1748, 1751, 1772, 1793, 1814, 1829, 1836,
	1845, 1847, 1850, 1852, 1855, 1857, 1860, 1863,
	1864, 1867, 1868, 1871, 1872, 1881, 1890, 1892,
	1900, 1908, 1916, 1924, 1932, 1940, 1942, 1948,
	1957, 1966, 1975, 1977, 1980, 1983, 1984, 1992,
	1993, 1999, 2001, 2007, 2011, 2016,
}

var _sdp_trans_keys []byte = []byte{
	118, 61, 48, 57, 13, 10, 111, 61,
	127, 0, 32, 32, 127, 0, 31, 48,
	57, 32, 48, 57, 48, 57, 32, 48,
	57, 33, 35, 39, 42, 43, 45, 46,
	48, 57, 65, 90, 94, 126, 32, 33,
	35, 39, 42, 43, 45, 46, 48, 57,
	65, 90, 94, 126, 33, 35, 39, 42,
	43, 45, 46, 48, 57, 65, 90, 94,
	126, 32, 33, 35, 39, 42, 43, 45,
	46, 48, 57, 65, 90, 94, 126, 33,
	58, 35, 39, 42, 43, 45, 46, 48,
	57, 65, 70, 71, 90, 94, 96, 97,
	102, 103, 126, 13, 33, 35, 39, 42,
	43, 45, 46, 48, 57, 65, 90, 94,
	126, 10, 115, 61, 0, 10, 13, 0,
	10, 13, 10, 98, 99, 101, 105, 112,
	116, 117, 61, 33, 35, 39, 42, 43,
	45, 46, 48, 57, 65, 90, 94, 126,
	33, 58, 35, 39, 42, 43, 45, 46,
	48, 57, 65, 90, 94, 126, 48, 57,
	13, 48, 57, 10, 98, 116, 61, 48,
	57, 32, 48, 57, 48, 57, 13, 48,
	57, 10, 61, 33, 35, 39, 42, 43,
	45, 46, 48, 57, 65, 90, 94, 126,
	13, 33, 58, 35, 39, 42, 43, 45,
	46, 48, 57, 65, 90, 94, 126, 10,
	61, 33, 35, 39, 42, 43, 45, 46,
	48, 57, 65, 90, 94, 126, 32, 33,
	35, 39, 42, 43, 45, 46, 48, 57,
	65, 90, 94, 126, 48, 57, 32, 47,
	48, 57, 33, 35, 39, 42, 43, 45,
	46, 48, 57, 65, 90, 94, 126, 32,
	33, 47, 35, 39, 42, 43, 45, 57,
	65, 90, 94, 126, 33, 35, 39, 42,
	43, 45, 46, 48, 57, 65, 90, 94,
	126, 13, 32, 33, 35, 39, 42, 43,
	45, 46, 48, 57, 65, 90, 94, 126,
	10, 61, 33, 35, 39, 42, 43, 45,
	46, 48, 57, 65, 90, 94, 126, 33,
	58, 35, 39, 42, 43, 45, 46, 48,
	57, 65, 90, 94, 126, 48, 57, 13,
	48, 57, 10, 61, 98, 99, 112, 117,
	97, 115, 101, 54, 52, 58, 0, 10,
	13, 0, 10, 13, 108, 101, 97, 114,
	114, 111, 109, 112, 116, 13, 114, 105,
	61, 33, 35, 39, 42, 43, 45, 46,
	48, 57, 65, 90, 94, 126, 32, 33,
	35, 39, 42, 43, 45, 46, 48, 57,
	65, 90, 94, 126, 33, 35, 39, 42,
	43, 45, 46, 48, 57, 65, 90, 94,
	126, 32, 33, 35, 39, 42, 43, 45,
	46, 48, 57, 65, 90, 94, 126, 33,
	50, 58, 35, 39, 42, 43, 45, 46,
	48, 57, 65, 70, 71, 90, 94, 96,
	97, 102, 103, 126, 13, 33, 35, 39,
	42, 43, 45, 46, 48, 57, 65, 90,
	94, 126, 13, 33, 47, 58, 35, 39,
	42, 43, 45, 46, 48, 57, 65, 70,
	71, 90, 94, 96, 97, 102, 103, 126,
	48, 57, 13, 13, 33, 47, 58, 35,
	39, 42, 43, 45, 46, 48, 57, 65,
	70, 71, 90, 94, 96, 97, 102, 103,
	126, 13, 33, 47, 58, 35, 39, 42,
	43, 45, 46, 48, 57, 65, 70, 71,
	90, 94, 96, 97, 102, 103, 126, 13,
	33, 47, 58, 35, 39, 42, 43, 45,
	57, 65, 90, 94, 126, 58, 48, 57,
	65, 70, 97, 102, 13, 46, 47, 58,
	48, 57, 65, 70, 97, 102, 48, 57,
	46, 48, 57, 48, 57, 46, 48, 57,
	48, 57, 13, 48, 57, 13, 48, 57,
	46, 48, 57, 46, 46, 48, 57, 46,
	13, 46, 47, 58, 48, 57, 65, 70,
	97, 102, 13, 46, 47, 58, 48, 57,
	65, 70, 97, 102, 13, 47, 58, 13,
	47, 58, 48, 57, 65, 70, 97, 102,
	13, 47, 58, 48, 57, 65, 70, 97,
	102, 13, 47, 58, 48, 57, 65, 70,
	97, 102, 13, 47, 58, 48, 57, 65,
	70, 97, 102, 13, 47, 58, 48, 57,
	65, 70, 97, 102, 13, 47, 58, 48,
	57, 65, 70, 97, 102, 13, 47, 58,
	48, 57, 65, 70, 97, 102, 13, 46,
	47, 58, 48, 57, 65, 70, 97, 102,
	13, 46, 47, 58, 48, 57, 65, 70,
	97, 102, 13, 46, 47, 58, 48, 57,
	65, 70, 97, 102, 48, 57, 46, 48,
	57, 46, 48, 57, 46, 13, 47, 58,
	48, 57, 65, 70, 97, 102, 13, 33,
	47, 50, 51, 58, 35, 39, 42, 43,
	45, 46, 48, 57, 65, 70, 71, 90,
	94, 96, 97, 102, 103, 126, 13, 33,
	47, 58, 35, 39, 42, 43, 45, 46,
	48, 51, 52, 57, 65, 70, 71, 90,
	94, 96, 97, 102, 103, 126, 13, 33,
	45, 46, 47, 58, 35, 39, 42, 43,
	48, 57, 65, 70, 71, 90, 94, 96,
	97, 102, 103, 126, 13, 33, 35, 39,
	42, 43, 45, 46, 48, 57, 65, 90,
	94, 126, 13, 33, 45, 46, 35, 39,
	42, 43, 48, 57, 65, 90, 94, 126,
	13, 33, 35, 39, 42, 43, 45, 46,
	48, 57, 65, 90, 94, 126, 13, 33,
	45, 46, 35, 39, 42, 43, 48, 57,
	65, 90, 94, 126, 13, 33, 35, 39,
	42, 43, 45, 46, 48, 57, 65, 90,
	94, 126, 13, 33, 47, 35, 39, 42,
	43, 45, 46, 48, 57, 65, 90, 94,
	126, 48, 57, 13, 47, 48, 57, 13,
	47, 48, 57, 13, 47, 13, 33, 47,
	35, 39, 42, 43, 45, 46, 48, 57,
	65, 90, 94, 126, 13, 33, 47, 35,
	39, 42, 43, 45, 57, 65, 90, 94,
	126, 13, 33, 45, 46, 35, 39, 42,
	43, 48, 57, 65, 90, 94, 126, 13,
	33, 45, 46, 35, 39, 42, 43, 48,
	57, 65, 90, 94, 126, 13, 33, 45,
	46, 35, 39, 42, 43, 48, 57, 65,
	90, 94, 126, 13, 33, 45, 46, 35,
	39, 42, 43, 48, 57, 65, 90, 94,
	126, 13, 33, 47, 58, 35, 39, 42,
	43, 45, 46, 48, 57, 65, 70, 71,
	90, 94, 96, 97, 102, 103, 126, 58,
	61, 0, 10, 13, 0, 10, 13, 10,
	33, 35, 39, 42, 43, 45, 46, 48,
	57, 65, 90, 94, 126, 48, 57, 32,
	48, 57, 0, 10, 13, 0, 10, 13,
	61, 48, 57, 32, 100, 104, 109, 115,
	48, 57, 48, 57, 13, 32, 100, 104,
	109, 115, 48, 57, 13, 32, 32, 61,
	49, 57, 48, 57, 48, 57, 48, 57,
	48, 57, 48, 57, 48, 57, 48, 57,
	48, 57, 48, 57, 32, 48, 57, 45,
	48, 57, 48, 57, 13, 32, 100, 104,
	109, 115, 48, 57, 10, 49, 57, 13,
	32, 61, 33, 35, 39, 42, 43, 45,
	46, 48, 57, 65, 90, 94, 126, 32,
	33, 35, 39, 42, 43, 45, 46, 48,
	57, 65, 90, 94, 126, 33, 35, 39,
	42, 43, 45, 46, 48, 57, 65, 90,
	94, 126, 32, 33, 35, 39, 42, 43,
	45, 46, 48, 57, 65, 90, 94, 126,
	33, 50, 58, 35, 39, 42, 43, 45,
	46, 48, 57, 65, 70, 71, 90, 94,
	96, 97, 102, 103, 126, 13, 33, 35,
	39, 42, 43, 45, 46, 48, 57, 65,
	90, 94, 126, 13, 33, 47, 58, 35,
	39, 42, 43, 45, 46, 48, 57, 65,
	70, 71, 90, 94, 96, 97, 102, 103,
	126, 48, 57, 13, 13, 33, 47, 58,
	35, 39, 42, 43, 45, 46, 48, 57,
	65, 70, 71, 90, 94, 96, 97, 102,
	103, 126, 13, 33, 47, 58, 35, 39,
	42, 43, 45, 46, 48, 57, 65, 70,
	71, 90, 94, 96, 97, 102, 103, 126,
	13, 33, 47, 58, 35, 39, 42, 43,
	45, 57, 65, 90, 94, 126, 58, 48,
	57, 65, 70, 97, 102, 13, 46, 47,
	58, 48, 57, 65, 70, 97, 102, 48,
	57, 46, 48, 57, 48, 57, 46, 48,
	57, 48, 57, 13, 48, 57, 13, 48,
	57, 46, 48, 57, 46, 46, 48, 57,
	46, 13, 46, 47, 58, 48, 57, 65,
	70, 97, 102, 13, 46, 47, 58, 48,
	57, 65, 70, 97, 102, 13, 47, 58,
	13, 47, 58, 48, 57, 65, 70, 97,
	102, 13, 47, 58, 48, 57, 65, 70,
	97, 102, 13, 47, 58, 48, 57, 65,
	70, 97, 102, 13, 47, 58, 48, 57,
	65, 70, 97, 102, 13, 47, 58, 48,
	57, 65, 70, 97, 102, 13, 47, 58,
	48, 57, 65, 70, 97, 102, 13, 47,
	58, 48, 57, 65, 70, 97, 102, 13,
	46, 47, 58, 48, 57, 65, 70, 97,
	102, 13, 46, 47, 58, 48, 57, 65,
	70, 97, 102, 13, 46, 47, 58, 48,
	57, 65, 70, 97, 102, 48, 57, 46,
	48, 57, 46, 48, 57, 46, 13, 47,
	58, 48, 57, 65, 70, 97, 102, 13,
	33, 47, 50, 51, 58, 35, 39, 42,
	43, 45, 46, 48, 57, 65, 70, 71,
	90, 94, 96, 97, 102, 103, 126, 13,
	33, 47, 58, 35, 39, 42, 43, 45,
	46, 48, 51, 52, 57, 65, 70, 71,
	90, 94, 96, 97, 102, 103, 126, 13,
	33, 45, 46, 47, 58, 35, 39, 42,
	43, 48, 57, 65, 70, 71, 90, 94,
	96, 97, 102, 103, 126, 13, 33, 35,
	39, 42, 43, 45, 46, 48, 57, 65,
	90, 94, 126, 13, 33, 45, 46, 35,
	39, 42, 43, 48, 57, 65, 90, 94,
	126, 13, 33, 35, 39, 42, 43, 45,
	46, 48, 57, 65, 90, 94, 126, 13,
	33, 45, 46, 35, 39, 42, 43, 48,
	57, 65, 90, 94, 126, 13, 33, 35,
	39, 42, 43, 45, 46, 48, 57, 65,
	90, 94, 126, 13, 33, 47, 35, 39,
	42, 43, 45, 46, 48, 57, 65, 90,
	94, 126, 48, 57, 13, 47, 48, 57,
	13, 47, 48, 57, 13, 47, 13, 33,
	47, 35, 39, 42, 43, 45, 46, 48,
	57, 65, 90, 94, 126, 13, 33, 47,
	35, 39, 42, 43, 45, 57, 65, 90,
	94, 126, 13, 33, 45, 46, 35, 39,
	42, 43, 48, 57, 65, 90, 94, 126,
	13, 33, 45, 46, 35, 39, 42, 43,
	48, 57, 65, 90, 94, 126, 13, 33,
	45, 46, 35, 39, 42, 43, 48, 57,
	65, 90, 94, 126, 13, 33, 45, 46,
	35, 39, 42, 43, 48, 57, 65, 90,
	94, 126, 13, 33, 47, 58, 35, 39,
	42, 43, 45, 46, 48, 57, 65, 70,
	71, 90, 94, 96, 97, 102, 103, 126,
	58, 61, 0, 10, 13, 0, 10, 13,
	10, 98, 99, 101, 112, 116, 61, 0,
	10, 13, 0, 10, 13, 10, 98, 99,
	112, 116, 61, 0, 10, 13, 0, 10,
	13, 10, 98, 99, 101, 112, 116, 117,
	61, 0, 10, 13, 0, 10, 13, 13,
	33, 58, 35, 39, 42, 43, 45, 46,
	48, 57, 65, 70, 71, 90, 94, 96,
	97, 102, 103, 126, 13, 33, 58, 35,
	39, 42, 43, 45, 46, 48, 57, 65,
	70, 71, 90, 94, 96, 97, 102, 103,
	126, 13, 33, 58, 35, 39, 42, 43,
	45, 46, 48, 57, 65, 70, 71, 90,
	94, 96, 97, 102, 103, 126, 13, 33,
	58, 35, 39, 42, 43, 45, 46, 48,
	57, 65, 90, 94, 126, 58, 48, 57,
	65, 70, 97, 102, 13, 46, 58, 48,
	57, 65, 70, 97, 102, 48, 57, 46,
	48, 57, 48, 57, 46, 48, 57, 48,
	57, 13, 48, 57, 13, 48, 57, 13,
	46, 48, 57, 46, 46, 48, 57, 46,
	13, 46, 58, 48, 57, 65, 70, 97,
	102, 13, 46, 58, 48, 57, 65, 70,
	97, 102, 13, 58, 13, 58, 48, 57,
	65, 70, 97, 102, 13, 58, 48, 57,
	65, 70, 97, 102, 13, 58, 48, 57,
	65, 70, 97, 102, 13, 58, 48, 57,
	65, 70, 97, 102, 13, 58, 48, 57,
	65, 70, 97, 102, 13, 58, 48, 57,
	65, 70, 97, 102, 13, 58, 48, 57,
	65, 70, 97, 102, 13, 46, 58, 48,
	57, 65, 70, 97, 102, 13, 46, 58,
	48, 57, 65, 70, 97, 102, 13, 46,
	58, 48, 57, 65, 70, 97, 102, 48,
	57, 46, 48, 57, 46, 48, 57, 46,
	13, 58, 48, 57, 65, 70, 97, 102,
	58, 97, 107, 109, 114, 116, 122, 97,
	109, 97, 98, 99, 105, 107, 109, 97,
	98, 107, 109, 97, 98, 99, 107, 109,
	97, 107, 109,
}

var _sdp_single_lengths []byte = []byte{
	0, 1, 1, 0, 1, 1, 1, 1,
	1, 2, 0, 1, 0, 1, 1, 2,
	1, 2, 2, 2, 1, 1, 1, 3,
	3, 1, 7, 1, 1, 2, 0, 1,
	1, 2, 1, 0, 1, 0, 1, 1,
	1, 1, 3, 1, 1, 1, 2, 0,
	2, 1, 3, 1, 3, 1, 1, 1,
	2, 0, 1, 1, 1, 4, 1, 1,
	1, 1, 1, 1, 3, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 1, 2, 3,
	2, 4, 0, 1, 4, 4, 4, 1,
	4, 0, 1, 0, 1, 0, 1, 1,
	1, 1, 1, 1, 4, 4, 3, 3,
	3, 3, 3, 3, 3, 3, 0, 4,
	4, 4, 0, 1, 1, 1, 3, 6,
	4, 6, 2, 4, 2, 4, 2, 3,
	0, 2, 2, 2, 3, 3, 4, 4,
	4, 4, 4, 1, 1, 3, 3, 1,
	1, 0, 1, 3, 3, 1, 0, 5,
	0, 6, 2, 1, 1, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1,
	1, 0, 6, 1, 0, 2, 1, 1,
	2, 1, 2, 3, 2, 4, 0, 1,
	4, 4, 4, 1, 4, 0, 1, 0,
	1, 0, 1, 1, 1, 1, 1, 1,
	4, 4, 3, 3, 3, 3, 3, 3,
	3, 3, 0, 4, 4, 4, 0, 1,
	1, 1, 3, 6, 4, 6, 2, 4,
	2, 4, 2, 3, 0, 2, 2, 2,
	3, 3, 4, 4, 4, 4, 4, 1,
	1, 3, 3, 1, 5, 1, 3, 3,
	1, 4, 1, 3, 3, 1, 6, 1,
	3, 3, 3, 3, 3, 3, 1, 3,
	0, 1, 0, 1, 0, 1, 1, 1,
	1, 1, 1, 1, 3, 3, 2, 2,
	2, 2, 2, 2, 2, 2, 0, 3,
	3, 3, 0, 1, 1, 1, 2, 1,
	6, 2, 6, 4, 5, 3,
}

var _sdp_range_lengths []byte = []byte{
	0, 0, 0, 1, 0, 0, 0, 0,
	1, 1, 1, 1, 1, 1, 6, 6,
	6, 6, 9, 6, 0, 0, 0, 0,
	0, 0, 0, 0, 6, 6, 1, 1,
	0, 0, 0, 1, 1, 1, 1, 0,
	0, 6, 6, 0, 0, 6, 6, 1,
	1, 6, 5, 6, 6, 0, 0, 6,
	6, 1, 1, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 6, 6, 6, 6, 9,
	6, 9, 1, 0, 9, 9, 5, 3,
	3, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 1, 0, 3, 3, 0, 3,
	3, 3, 3, 3, 3, 0, 3, 3,
	3, 3, 1, 1, 1, 0, 3, 9,
	10, 8, 6, 5, 6, 5, 6, 6,
	1, 1, 1, 0, 6, 5, 5, 5,
	5, 5, 9, 0, 0, 0, 0, 0,
	6, 1, 1, 0, 0, 0, 1, 1,
	1, 1, 0, 0, 0, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 1, 0, 0, 6,
	6, 6, 6, 9, 6, 9, 1, 0,
	9, 9, 5, 3, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 1, 0,
	3, 3, 0, 3, 3, 3, 3, 3,
	3, 0, 3, 3, 3, 3, 1, 1,
	1, 0, 3, 9, 10, 8, 6, 5,
	6, 5, 6, 6, 1, 1, 1, 0,
	6, 5, 5, 5, 5, 5, 9, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 9, 9, 9, 6, 3, 3,
	1, 1, 1, 1, 1, 1, 1, 0,
	1, 0, 1, 0, 3, 3, 0, 3,
	3, 3, 3, 3, 3, 0, 3, 3,
	3, 3, 1, 1, 1, 0, 3, 0,
	0, 0, 0, 0, 0, 0,
}

var _sdp_index_offsets []int16 = []int16{
	0, 0, 2, 4, 6, 8, 10, 12,
	14, 17, 21, 23, 26, 28, 31, 39,
	48, 56, 65, 77, 86, 88, 90, 92,
	96, 100, 102, 110, 112, 120, 129, 131,
	134, 136, 139, 141, 143, 146, 148, 151,
	153, 155, 163, 173, 175, 177, 185, 194,
	196, 200, 208, 217, 225, 235, 237, 239,
	247, 256, 258, 261, 263, 265, 270, 272,
	274, 276, 278, 280, 282, 286, 290, 292,
	294, 296, 298, 300, 302, 304, 306, 308,
	310, 312, 314, 316, 324, 333, 341, 350,
	363, 372, 386, 388, 390, 404, 418, 428,
	433, 441, 443, 446, 448, 451, 453, 456,
	459, 462, 464, 467, 469, 477, 485, 489,
	496, 503, 510, 517, 524, 531, 535, 539,
	547, 555, 563, 565, 568, 571, 573, 580,
	596, 611, 626, 635, 645, 654, 664, 673,
	683, 685, 689, 693, 696, 706, 715, 725,
	735, 745, 755, 769, 771, 773, 777, 781,
	783, 791, 793, 796, 800, 804, 806, 808,
	815, 817, 825, 828, 830, 832, 834, 836,
	838, 840, 842, 844, 846, 848, 850, 852,
	855, 858, 860, 868, 870, 872, 875, 877,
	885, 894, 902, 911, 924, 933, 947, 949,
	951, 965, 979, 989, 994, 1002, 1004, 1007,
	1009, 1012, 1014, 1017, 1020, 1023, 1025, 1028,
	1030, 1038, 1046, 1050, 1057, 1064, 1071, 1078,
	1085, 1092, 1096, 1100, 1108, 1116, 1124, 1126,
	1129, 1132, 1134, 1141, 1157, 1172, 1187, 1196,
	1206, 1215, 1225, 1234, 1244, 1246, 1250, 1254,
	1257, 1267, 1276, 1286, 1296, 1306, 1316, 1330,
	1332, 1334, 1338, 1342, 1344, 1350, 1352, 1356,
	1360, 1362, 1367, 1369, 1373, 1377, 1379, 1386,
	1388, 1392, 1396, 1409, 1422, 1435, 1445, 1450,
	1457, 1459, 1462, 1464, 1467, 1469, 1472, 1475,
	1477, 1480, 1482, 1485, 1487, 1494, 1501, 1504,
	1510, 1516, 1522, 1528, 1534, 1540, 1543, 1547,
	1554, 1561, 1568, 1570, 1573, 1576, 1578, 1584,
	1586, 1593, 1596, 1603, 1608, 1614,
}

var _sdp_indicies []int16 = []int16{
	0, 1, 2, 1, 3, 1, 4, 1,
	5, 1, 6, 1, 7, 1, 1, 1,
	8, 9, 1, 1, 10, 11, 1, 12,
	13, 1, 14, 1, 15, 16, 1, 17,
	17, 17, 17, 17, 17, 17, 1, 18,
	19, 19, 19, 19, 19, 19, 19, 1,
	20, 20, 20, 20, 20, 20, 20, 1,
	21, 22, 22, 22, 22, 22, 22, 22,
	1, 23, 25, 23, 23, 23, 24, 24,
	23, 23, 24, 23, 1, 26, 27, 27,
	27, 27, 27, 27, 27, 1, 28, 1,
	29, 1, 30, 1, 1, 1, 1, 31,
	1, 1, 33, 32, 34, 1, 35, 36,
	37, 38, 39, 40, 41, 1, 42, 1,
	43, 43, 43, 43, 43, 43, 43, 1,
	44, 45, 44, 44, 44, 44, 44, 44,
	1, 46, 1, 47, 48, 1, 49, 1,
	35, 40, 1, 50, 1, 51, 1, 52,
	53, 1, 54, 1, 55, 56, 1, 57,
	1, 58, 1, 59, 59, 59, 59, 59,
	59, 59, 1, 60, 61, 62, 61, 61,
	61, 61, 61, 61, 1, 63, 1, 64,
	1, 65, 65, 65, 65, 65, 65, 65,
	1, 66, 67, 67, 67, 67, 67, 67,
	67, 1, 68, 1, 69, 70, 71, 1,
	72, 72, 72, 72, 72, 72, 72, 1,
	73, 74, 75, 74, 74, 74, 74, 74,
	1, 76, 76, 76, 76, 76, 76, 76,
	1, 77, 78, 76, 76, 76, 76, 76,
	76, 76, 1, 79, 1, 80, 1, 81,
	81, 81, 81, 81, 81, 81, 1, 82,
	83, 82, 82, 82, 82, 82, 82, 1,
	84, 1, 85, 86, 1, 87, 1, 88,
	1, 89, 90, 91, 92, 1, 93, 1,
	94, 1, 95, 1, 96, 1, 97, 1,
	98, 1, 1, 1, 1, 99, 1, 1,
	100, 99, 101, 1, 102, 1, 103, 1,
	97, 1, 104, 1, 105, 1, 106, 1,
	107, 1, 108, 1, 100, 1, 109, 1,
	97, 1, 110, 1, 111, 111, 111, 111,
	111, 111, 111, 1, 112, 113, 113, 113,
	113, 113, 113, 113, 1, 114, 114, 114,
	114, 114, 114, 114, 1, 115, 116, 116,
	116, 116, 116, 116, 116, 1, 117, 119,
	120, 117, 117, 117, 118, 118, 117, 117,
	118, 117, 1, 121, 122, 122, 122, 122,
	122, 122, 122, 1, 121, 122, 123, 125,
	122, 122, 122, 124, 124, 122, 122, 124,
	122, 1, 126, 1, 121, 1, 121, 122,
	123, 125, 122, 122, 122, 127, 127, 122,
	122, 127, 122, 1, 121, 122, 123, 125,
	122, 122, 122, 128, 128, 122, 122, 128,
	122, 1, 121, 122, 123, 125, 122, 122,
	122, 122, 122, 1, 130, 129, 131, 131,
	1, 121, 132, 123, 125, 133, 134, 134,
	1, 135, 1, 136, 137, 1, 138, 1,
	139, 140, 1, 141, 1, 121, 142, 1,
	121, 126, 1, 139, 143, 1, 139, 1,
	136, 144, 1, 136, 1, 121, 132, 123,
	125, 145, 146, 146, 1, 121, 132, 123,
	125, 147, 147, 147, 1, 121, 123, 125,
	1, 121, 123, 125, 147, 147, 147, 1,
	121, 123, 125, 146, 146, 146, 1, 121,
	123, 149, 148, 148, 148, 1, 121, 123,
	151, 150, 150, 150, 1, 121, 123, 151,
	152, 152, 152, 1, 121, 123, 151, 153,
	153, 153, 1, 121, 123, 151, 1, 154,
	148, 148, 1, 121, 132, 123, 151, 155,
	150, 150, 1, 121, 132, 123, 151, 156,
	152, 152, 1, 121, 132, 123, 151, 153,
	153, 153, 1, 157, 1, 132, 158, 1,
	132, 159, 1, 132, 1, 121, 123, 125,
	134, 134, 134, 1, 121, 122, 123, 160,
	161, 125, 122, 122, 122, 124, 124, 122,
	122, 124, 122, 1, 121, 122, 123, 125,
	122, 122, 122, 127, 162, 127, 122, 122,
	127, 122, 1, 121, 122, 122, 163, 123,
	125, 122, 122, 128, 128, 122, 122, 128,
	122, 1, 121, 122, 122, 122, 122, 164,
	122, 122, 1, 121, 122, 122, 165, 122,
	122, 166, 122, 122, 1, 121, 122, 122,
	122, 122, 167, 122, 122, 1, 121, 122,
	122, 168, 122, 122, 169, 122, 122, 1,
	121, 122, 122, 122, 122, 170, 122, 122,
	1, 121, 122, 171, 122, 122, 122, 172,
	122, 122, 1, 173, 1, 121, 123, 174,
	1, 121, 123, 175, 1, 121, 123, 1,
	121, 122, 171, 122, 122, 122, 176, 122,
	122, 1, 121, 122, 171, 122, 122, 122,
	122, 122, 1, 121, 122, 122, 168, 122,
	122, 177, 122, 122, 1, 121, 122, 122,
	168, 122, 122, 122, 122, 122, 1, 121,
	122, 122, 165, 122, 122, 178, 122, 122,
	1, 121, 122, 122, 165, 122, 122, 122,
	122, 122, 1, 121, 122, 123, 125, 122,
	122, 122, 162, 127, 122, 122, 127, 122,
	1, 130, 1, 179, 1, 1, 1, 1,
	180, 1, 1, 182, 181, 183, 1, 74,
	74, 74, 74, 74, 74, 74, 1, 184,
	1, 185, 186, 1, 1, 1, 1, 187,
	1, 1, 189, 188, 190, 1, 191, 1,
	192, 194, 194, 194, 194, 193, 1, 195,
	1, 196, 192, 197, 197, 197, 197, 195,
	1, 196, 192, 1, 192, 1, 198, 1,
	199, 1, 200, 1, 201, 1, 202, 1,
	203, 1, 204, 1, 205, 1, 206, 1,
	207, 1, 208, 1, 209, 208, 1, 210,
	211, 1, 211, 1, 212, 213, 214, 214,
	214, 214, 211, 1, 215, 1, 216, 1,
	212, 213, 1, 217, 1, 218, 218, 218,
	218, 218, 218, 218, 1, 219, 220, 220,
	220, 220, 220, 220, 220, 1, 221, 221,
	221, 221, 221, 221, 221, 1, 222, 223,
	223, 223, 223, 223, 223, 223, 1, 224,
	226, 227, 224, 224, 224, 225, 225, 224,
	224, 225, 224, 1, 228, 229, 229, 229,
	229, 229, 229, 229, 1, 228, 229, 230,
	232, 229, 229, 229, 231, 231, 229, 229,
	231, 229, 1, 233, 1, 228, 1, 228,
	229, 230, 232, 229, 229, 229, 234, 234,
	229, 229, 234, 229, 1, 228, 229, 230,
	232, 229, 229, 229, 235, 235, 229, 229,
	235, 229, 1, 228, 229, 230, 232, 229,
	229, 229, 229, 229, 1, 237, 236, 238,
	238, 1, 228, 239, 230, 232, 240, 241,
	241, 1, 242, 1, 243, 244, 1, 245,
	1, 246, 247, 1, 248, 1, 228, 249,
	1, 228, 233, 1, 246, 250, 1, 246,
	1, 243, 251, 1, 243, 1, 228, 239,
	230, 232, 252, 253, 253, 1, 228, 239,
	230, 232, 254, 254, 254, 1, 228, 230,
	232, 1, 228, 230, 232, 254, 254, 254,
	1, 228, 230, 232, 253, 253, 253, 1,
	228, 230, 256, 255, 255, 255, 1, 228,
	230, 258, 257, 257, 257, 1, 228, 230,
	258, 259, 259, 259, 1, 228, 230, 258,
	260, 260, 260, 1, 228, 230, 258, 1,
	261, 255, 255, 1, 228, 239, 230, 258,
	262, 257, 257, 1, 228, 239, 230, 258,
	263, 259, 259, 1, 228, 239, 230, 258,
	260, 260, 260, 1, 264, 1, 239, 265,
	1, 239, 266, 1, 239, 1, 228, 230,
	232, 241, 241, 241, 1, 228, 229, 230,
	267, 268, 232, 229, 229, 229, 231, 231,
	229, 229, 231, 229, 1, 228, 229, 230,
	232, 229, 229, 229, 234, 269, 234, 229,
	229, 234, 229, 1, 228, 229, 229, 270,
	230, 232, 229, 229, 235, 235, 229, 229,
	235, 229, 1, 228, 229, 229, 229, 229,
	271, 229, 229, 1, 228, 229, 229, 272,
	229, 229, 273, 229, 229, 1, 228, 229,
	229, 229, 229, 274, 229, 229, 1, 228,
	229, 229, 275, 229, 229, 276, 229, 229,
	1, 228, 229, 229, 229, 229, 277, 229,
	229, 1, 228, 229, 278, 229, 229, 229,
	279, 229, 229, 1, 280, 1, 228, 230,
	281, 1, 228, 230, 282, 1, 228, 230,
	1, 228, 229, 278, 229, 229, 229, 283,
	229, 229, 1, 228, 229, 278, 229, 229,
	229, 229, 229, 1, 228, 229, 229, 275,
	229, 229, 284, 229, 229, 1, 228, 229,
	229, 275, 229, 229, 229, 229, 229, 1,
	228, 229, 229, 272, 229, 229, 285, 229,
	229, 1, 228, 229, 229, 272, 229, 229,
	229, 229, 229, 1, 228, 229, 230, 232,
	229, 229, 229, 269, 234, 229, 229, 234,
	229, 1, 237, 1, 286, 1, 1, 1,
	1, 287, 1, 1, 289, 288, 290, 1,
	35, 36, 37, 39, 40, 1, 291, 1,
	1, 1, 1, 292, 1, 1, 294, 293,
	295, 1, 35, 36, 39, 40, 1, 296,
	1, 1, 1, 1, 297, 1, 1, 299,
	298, 300, 1, 35, 36, 37, 39, 40,
	41, 1, 301, 1, 1, 1, 1, 302,
	1, 1, 304, 303, 26, 27, 306, 27,
	27, 27, 305, 305, 27, 27, 305, 27,
	1, 26, 27, 306, 27, 27, 27, 307,
	307, 27, 27, 307, 27, 1, 26, 27,
	306, 27, 27, 27, 308, 308, 27, 27,
	308, 27, 1, 26, 27, 306, 27, 27,
	27, 27, 27, 27, 1, 310, 309, 311,
	311, 1, 26, 312, 306, 313, 314, 314,
	1, 315, 1, 316, 317, 1, 318, 1,
	319, 320, 1, 321, 1, 26, 322, 1,
	26, 323, 1, 26, 1, 319, 324, 1,
	319, 1, 316, 325, 1, 316, 1, 26,
	312, 306, 326, 327, 327, 1, 26, 312,
	306, 328, 328, 328, 1, 26, 306, 1,
	26, 306, 328, 328, 328, 1, 26, 306,
	327, 327, 327, 1, 26, 330, 329, 329,
	329, 1, 26, 332, 331, 331, 331, 1,
	26, 332, 333, 333, 333, 1, 26, 332,
	334, 334, 334, 1, 26, 332, 1, 335,
	329, 329, 1, 26, 312, 332, 336, 331,
	331, 1, 26, 312, 332, 337, 333, 333,
	1, 26, 312, 332, 334, 334, 334, 1,
	338, 1, 312, 339, 1, 312, 340, 1,
	312, 1, 26, 306, 314, 314, 314, 1,
	310, 1, 341, 342, 343, 344, 40, 345,
	1, 341, 343, 1, 341, 346, 347, 348,
	342, 343, 1, 341, 346, 342, 343, 1,
	341, 346, 347, 342, 343, 1, 341, 342,
	343, 1,
}

var _sdp_trans_targs []int16 = []int16{
	2, 0, 3, 4, 5, 6, 7, 8,
	9, 10, 9, 11, 12, 11, 13, 14,
	13, 15, 16, 15, 17, 18, 17, 19,
	266, 303, 20, 19, 21, 22, 23, 24,
	24, 25, 26, 27, 182, 248, 258, 253,
	34, 263, 28, 29, 29, 30, 31, 32,
	31, 33, 35, 36, 37, 36, 38, 39,
	38, 304, 41, 42, 43, 42, 155, 305,
	45, 46, 47, 46, 48, 49, 153, 48,
	50, 51, 50, 152, 52, 53, 51, 306,
	55, 56, 56, 57, 58, 59, 58, 307,
	61, 62, 70, 74, 80, 63, 64, 65,
	66, 67, 68, 69, 43, 71, 72, 73,
	75, 76, 77, 78, 79, 81, 83, 84,
	85, 84, 86, 87, 86, 88, 89, 127,
	147, 59, 88, 90, 92, 95, 91, 93,
	94, 96, 113, 126, 97, 108, 112, 98,
	99, 106, 100, 101, 104, 102, 103, 105,
	107, 109, 111, 110, 114, 122, 115, 118,
	116, 117, 119, 120, 121, 123, 124, 125,
	128, 146, 129, 130, 131, 132, 144, 133,
	134, 142, 135, 136, 140, 137, 138, 139,
	141, 143, 145, 149, 150, 150, 151, 308,
	154, 49, 154, 156, 156, 43, 158, 159,
	160, 159, 163, 161, 39, 162, 165, 166,
	167, 168, 169, 170, 171, 172, 173, 174,
	175, 176, 177, 178, 179, 180, 181, 309,
	166, 183, 184, 185, 184, 186, 187, 186,
	188, 189, 227, 247, 32, 188, 190, 192,
	195, 191, 193, 194, 196, 213, 226, 197,
	208, 212, 198, 199, 206, 200, 201, 204,
	202, 203, 205, 207, 209, 211, 210, 214,
	222, 215, 218, 216, 217, 219, 220, 221,
	223, 224, 225, 228, 246, 229, 230, 231,
	232, 244, 233, 234, 242, 235, 236, 240,
	237, 238, 239, 241, 243, 245, 249, 250,
	250, 251, 252, 254, 255, 255, 256, 257,
	259, 260, 260, 261, 262, 264, 265, 265,
	251, 267, 270, 268, 269, 271, 289, 302,
	272, 284, 288, 273, 274, 282, 275, 276,
	280, 277, 278, 279, 281, 283, 285, 287,
	286, 290, 298, 291, 294, 292, 293, 295,
	296, 297, 299, 300, 301, 40, 60, 44,
	157, 164, 54, 82, 148,
}

var _sdp_trans_actions []byte = []byte{
	0, 0, 0, 1, 31, 0, 0, 0,
	1, 21, 0, 1, 23, 0, 1, 25,
	0, 1, 27, 0, 1, 29, 0, 1,
	1, 1, 33, 0, 0, 0, 0, 1,
	0, 35, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1, 0, 17, 1, 19,
	0, 0, 0, 1, 11, 0, 1, 13,
	0, 0, 0, 1, 9, 0, 5, 0,
	0, 1, 53, 0, 1, 55, 55, 0,
	1, 61, 0, 0, 0, 59, 0, 0,
	0, 1, 0, 17, 1, 19, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1,
	45, 0, 1, 47, 0, 1, 1, 1,
	1, 49, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1, 0, 37, 0,
	1, 57, 0, 1, 0, 7, 0, 1,
	0, 0, 0, 0, 15, 0, 0, 1,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 51, 0, 0, 0,
	0, 0, 1, 45, 0, 1, 47, 0,
	1, 1, 1, 1, 49, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1,
	0, 41, 0, 0, 1, 0, 43, 0,
	0, 1, 0, 37, 0, 0, 1, 0,
	39, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3,
	0, 0, 0, 0, 0,
}

const sdp_start int = 1
const sdp_first_final int = 304
const sdp_error int = 0

const sdp_en_main int = 1

//line parser.rl:8

// Parse scan and parse bytes array to SDP Message structure
func Parse(data []byte) (*Message, error) {
	var cs, p, pe, m int
	pe = len(data)

	// when media index is >= then it is media fields context
	// otherwise it is session context
	mediaIdx := -1
	msg := &Message{}

//line parser.rl:193

//line parser.go:771
	{
		cs = sdp_start
	}

//line parser.rl:195

//line parser.go:778
	{
		var _klen int
		var _trans int
		var _acts int
		var _nacts uint
		var _keys int
		if p == pe {
			goto _test_eof
		}
		if cs == 0 {
			goto _out
		}
	_resume:
		_keys = int(_sdp_key_offsets[cs])
		_trans = int(_sdp_index_offsets[cs])

		_klen = int(_sdp_single_lengths[cs])
		if _klen > 0 {
			_lower := int(_keys)
			var _mid int
			_upper := int(_keys + _klen - 1)
			for {
				if _upper < _lower {
					break
				}

				_mid = _lower + ((_upper - _lower) >> 1)
				switch {
				case data[p] < _sdp_trans_keys[_mid]:
					_upper = _mid - 1
				case data[p] > _sdp_trans_keys[_mid]:
					_lower = _mid + 1
				default:
					_trans += int(_mid - int(_keys))
					goto _match
				}
			}
			_keys += _klen
			_trans += _klen
		}

		_klen = int(_sdp_range_lengths[cs])
		if _klen > 0 {
			_lower := int(_keys)
			var _mid int
			_upper := int(_keys + (_klen << 1) - 2)
			for {
				if _upper < _lower {
					break
				}

				_mid = _lower + (((_upper - _lower) >> 1) & ^1)
				switch {
				case data[p] < _sdp_trans_keys[_mid]:
					_upper = _mid - 2
				case data[p] > _sdp_trans_keys[_mid+1]:
					_lower = _mid + 2
				default:
					_trans += int((_mid - int(_keys)) >> 1)
					goto _match
				}
			}
			_trans += _klen
		}

	_match:
		_trans = int(_sdp_indicies[_trans])
		cs = int(_sdp_trans_targs[_trans])

		if _sdp_trans_actions[_trans] == 0 {
			goto _again
		}

		_acts = int(_sdp_trans_actions[_trans])
		_nacts = uint(_sdp_actions[_acts])
		_acts++
		for ; _nacts > 0; _nacts-- {
			_acts++
			switch _sdp_actions[_acts-1] {
			case 0:
//line parser.rl:21
				m = p
			case 1:
//line parser.rl:22

				if mediaIdx == -1 {
					msg.Medias = make(Medias, 1)
					mediaIdx = 0
				} else {
					mediaIdx++
					msg.Medias = append(msg.Medias, Media{})
				}

			case 2:
//line parser.rl:31

				if mediaIdx == -1 {
					msg.Attr = append(msg.Attr, Attribute{})
					i := len(msg.Attr) - 1
					msg.Attr[i].key = data[m:p]
				} else {
					msg.Medias[mediaIdx].attr = append(msg.Medias[mediaIdx].attr, Attribute{})
					i := len(msg.Medias[mediaIdx].attr) - 1
					msg.Medias[mediaIdx].attr[i].key = data[m:p]
				}

			case 3:
//line parser.rl:42

				if mediaIdx == -1 {
					i := len(msg.Attr) - 1
					msg.Attr[i].value = data[m:p]
				} else {
					i := len(msg.Medias[mediaIdx].attr) - 1
					msg.Medias[mediaIdx].attr[i].value = data[m:p]
				}

			case 4:
//line parser.rl:51

				if mediaIdx == -1 {
					msg.Attr = append(msg.Attr, Attribute{})
					i := len(msg.Attr) - 1
					msg.Attr[i].flag = data[m:p]
					msg.Attr[i].isFlag = true
				} else {
					msg.Medias[mediaIdx].attr = append(msg.Medias[mediaIdx].attr, Attribute{})
					i := len(msg.Medias[mediaIdx].attr) - 1
					msg.Medias[mediaIdx].attr[i].flag = data[m:p]
					msg.Medias[mediaIdx].attr[i].isFlag = true
				}

			case 5:
//line parser.rl:64

				msg.Time = append(msg.Time, TimeDesc{start: data[m:p]})

			case 6:
//line parser.rl:67

				i := len(msg.Time) - 1
				msg.Time[i].stop = data[m:p]

			case 7:
//line parser.rl:71

				i := len(msg.Time) - 1
				msg.Time[i].Repeat = append(msg.Time[i].Repeat, data[m:p])

			case 8:
//line parser.rl:75

				msg.BandWidth = append(msg.BandWidth, BandWidth{bt: data[m:p]})

			case 9:
//line parser.rl:78

				i := len(msg.BandWidth) - 1
				msg.BandWidth[i].bw = data[m:p]

			case 10:
//line parser.rl:108
				msg.Origin.username = data[m:p]
			case 11:
//line parser.rl:109
				msg.Origin.sessID = data[m:p]
			case 12:
//line parser.rl:110
				msg.Origin.sessVer = data[m:p]
			case 13:
//line parser.rl:111
				msg.Origin.netType = data[m:p]
			case 14:
//line parser.rl:112
				msg.Origin.addrType = data[m:p]
			case 15:
//line parser.rl:136
				msg.ver = data[m]
			case 16:
//line parser.rl:139
				msg.Origin.unicAddr = data[m:p]
			case 17:
//line parser.rl:140
				msg.subject = data[m:p]
			case 18:
//line parser.rl:142
				msg.info = data[m:p]
			case 19:
//line parser.rl:143
				msg.uri = data[m:p]
			case 20:
//line parser.rl:145
				msg.Email = append(msg.Email, data[m:p])
			case 21:
//line parser.rl:147
				msg.Phone = append(msg.Phone, data[m:p])
			case 22:
//line parser.rl:148
				msg.Conn.netType = data[m:p]
			case 23:
//line parser.rl:149
				msg.Conn.addrType = data[m:p]
			case 24:
//line parser.rl:150
				msg.Conn.address = data[m:p]
			case 25:
//line parser.rl:158
				msg.tzones = data[m:p]
			case 26:
//line parser.rl:162
				msg.Medias[mediaIdx].mtype = data[m:p]
			case 27:
//line parser.rl:163
				msg.Medias[mediaIdx].port = data[m:p]
			case 28:
//line parser.rl:164
				msg.Medias[mediaIdx].nport = data[m:p]
			case 29:
//line parser.rl:165
				msg.Medias[mediaIdx].proto = data[m:p]
			case 30:
//line parser.rl:166
				msg.Medias[mediaIdx].fmt = data[m:p]
//line parser.go:1001
			}
		}

	_again:
		if cs == 0 {
			goto _out
		}
		p++
		if p != pe {
			goto _resume
		}
	_test_eof:
		{
		}
	_out:
		{
		}
	}

//line parser.rl:196
	if cs >= sdp_first_final {
		return msg, nil
	}
	return nil, ErrorSDPParsing.msg("'%s' [%d]", data[:p], p)
}
