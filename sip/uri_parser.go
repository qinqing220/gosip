
//line uri_parser.rl:1
// -*-go-*-
//
// SIP(s) URI parser
package sip


//line uri_parser.rl:7

//line uri_parser.go:12
var _uri_actions []byte = []byte{
	0, 1, 0, 1, 1, 1, 2, 1, 3, 
	1, 4, 2, 1, 2, 
}

var _uri_key_offsets []int16 = []int16{
	0, 0, 1, 2, 3, 5, 7, 11, 
	28, 46, 63, 81, 97, 114, 122, 138, 
	156, 172, 190, 206, 224, 242, 260, 278, 
	296, 314, 330, 347, 364, 381, 386, 402, 
	420, 428, 437, 445, 454, 462, 471, 480, 
	485, 494, 499, 508, 513, 531, 549, 566, 
	583, 600, 617, 622, 638, 656, 674, 692, 
	700, 709, 718, 723, 727, 728, 746, 762, 
	770, 778, 786, 794, 798, 816, 834, 852, 
}

var _uri_trans_keys []byte = []byte{
	115, 105, 112, 58, 115, 33, 126, 58, 
	64, 33, 126, 58, 64, 91, 33, 47, 
	48, 57, 59, 63, 65, 90, 92, 96, 
	97, 122, 123, 126, 45, 46, 58, 64, 
	33, 47, 48, 57, 59, 63, 65, 90, 
	91, 96, 97, 122, 123, 126, 45, 58, 
	64, 33, 47, 48, 57, 59, 63, 65, 
	90, 91, 96, 97, 122, 123, 126, 45, 
	46, 58, 64, 33, 47, 48, 57, 59, 
	63, 65, 90, 91, 96, 97, 122, 123, 
	126, 58, 64, 33, 47, 48, 57, 59, 
	63, 65, 90, 91, 96, 97, 122, 123, 
	126, 45, 58, 64, 33, 47, 48, 57, 
	59, 63, 65, 90, 91, 96, 97, 122, 
	123, 126, 58, 64, 33, 47, 48, 57, 
	59, 126, 58, 64, 33, 47, 48, 57, 
	59, 63, 65, 90, 91, 96, 97, 122, 
	123, 126, 45, 46, 58, 64, 33, 47, 
	48, 57, 59, 63, 65, 90, 91, 96, 
	97, 122, 123, 126, 58, 64, 33, 47, 
	48, 57, 59, 63, 65, 90, 91, 96, 
	97, 122, 123, 126, 45, 46, 58, 64, 
	33, 47, 48, 57, 59, 63, 65, 90, 
	91, 96, 97, 122, 123, 126, 58, 64, 
	33, 47, 48, 57, 59, 63, 65, 90, 
	91, 96, 97, 122, 123, 126, 45, 46, 
	58, 64, 33, 47, 48, 57, 59, 63, 
	65, 90, 91, 96, 97, 122, 123, 126, 
	45, 46, 58, 64, 33, 47, 48, 57, 
	59, 63, 65, 90, 91, 96, 97, 122, 
	123, 126, 45, 46, 58, 64, 33, 47, 
	48, 57, 59, 63, 65, 90, 91, 96, 
	97, 122, 123, 126, 45, 46, 58, 64, 
	33, 47, 48, 57, 59, 63, 65, 90, 
	91, 96, 97, 122, 123, 126, 45, 46, 
	58, 64, 33, 47, 48, 57, 59, 63, 
	65, 90, 91, 96, 97, 122, 123, 126, 
	45, 46, 58, 64, 33, 47, 48, 57, 
	59, 63, 65, 90, 91, 96, 97, 122, 
	123, 126, 58, 64, 33, 47, 48, 57, 
	59, 63, 65, 70, 71, 96, 97, 102, 
	103, 126, 58, 64, 93, 33, 47, 48, 
	57, 59, 63, 65, 70, 71, 96, 97, 
	102, 103, 126, 58, 64, 93, 33, 47, 
	48, 57, 59, 63, 65, 70, 71, 96, 
	97, 102, 103, 126, 58, 64, 93, 33, 
	47, 48, 57, 59, 63, 65, 70, 71, 
	96, 97, 102, 103, 126, 58, 64, 93, 
	33, 126, 58, 64, 33, 47, 48, 57, 
	59, 63, 65, 70, 71, 96, 97, 102, 
	103, 126, 46, 58, 64, 93, 33, 47, 
	48, 57, 59, 63, 65, 70, 71, 96, 
	97, 102, 103, 126, 58, 64, 33, 47, 
	48, 57, 59, 126, 46, 58, 64, 33, 
	47, 48, 57, 59, 126, 58, 64, 33, 
	47, 48, 57, 59, 126, 46, 58, 64, 
	33, 47, 48, 57, 59, 126, 58, 64, 
	33, 47, 48, 57, 59, 126, 58, 64, 
	93, 33, 47, 48, 57, 59, 126, 58, 
	64, 93, 33, 47, 48, 57, 59, 126, 
	58, 64, 93, 33, 126, 46, 58, 64, 
	33, 47, 48, 57, 59, 126, 46, 58, 
	64, 33, 126, 46, 58, 64, 33, 47, 
	48, 57, 59, 126, 46, 58, 64, 33, 
	126, 46, 58, 64, 93, 33, 47, 48, 
	57, 59, 63, 65, 70, 71, 96, 97, 
	102, 103, 126, 46, 58, 64, 93, 33, 
	47, 48, 57, 59, 63, 65, 70, 71, 
	96, 97, 102, 103, 126, 58, 64, 93, 
	33, 47, 48, 57, 59, 63, 65, 70, 
	71, 96, 97, 102, 103, 126, 58, 64, 
	93, 33, 47, 48, 57, 59, 63, 65, 
	70, 71, 96, 97, 102, 103, 126, 58, 
	64, 93, 33, 47, 48, 57, 59, 63, 
	65, 70, 71, 96, 97, 102, 103, 126, 
	58, 64, 93, 33, 47, 48, 57, 59, 
	63, 65, 70, 71, 96, 97, 102, 103, 
	126, 58, 64, 93, 33, 126, 58, 64, 
	33, 47, 48, 57, 59, 63, 65, 70, 
	71, 96, 97, 102, 103, 126, 46, 58, 
	64, 93, 33, 47, 48, 57, 59, 63, 
	65, 70, 71, 96, 97, 102, 103, 126, 
	46, 58, 64, 93, 33, 47, 48, 57, 
	59, 63, 65, 70, 71, 96, 97, 102, 
	103, 126, 46, 58, 64, 93, 33, 47, 
	48, 57, 59, 63, 65, 70, 71, 96, 
	97, 102, 103, 126, 58, 64, 33, 47, 
	48, 57, 59, 126, 46, 58, 64, 33, 
	47, 48, 57, 59, 126, 46, 58, 64, 
	33, 47, 48, 57, 59, 126, 46, 58, 
	64, 33, 126, 58, 64, 33, 126, 58, 
	45, 46, 58, 64, 33, 47, 48, 57, 
	59, 63, 65, 90, 91, 96, 97, 122, 
	123, 126, 58, 64, 33, 47, 48, 57, 
	59, 63, 65, 90, 91, 96, 97, 122, 
	123, 126, 58, 64, 33, 47, 48, 57, 
	59, 126, 58, 64, 33, 47, 48, 57, 
	59, 126, 58, 64, 33, 47, 48, 57, 
	59, 126, 58, 64, 33, 47, 48, 57, 
	59, 126, 58, 64, 33, 126, 45, 46, 
	58, 64, 33, 47, 48, 57, 59, 63, 
	65, 90, 91, 96, 97, 122, 123, 126, 
	45, 46, 58, 64, 33, 47, 48, 57, 
	59, 63, 65, 90, 91, 96, 97, 122, 
	123, 126, 45, 46, 58, 64, 33, 47, 
	48, 57, 59, 63, 65, 90, 91, 96, 
	97, 122, 123, 126, 58, 64, 33, 126, 
	
}

var _uri_single_lengths []byte = []byte{
	0, 1, 1, 1, 2, 0, 2, 3, 
	4, 3, 4, 2, 3, 2, 2, 4, 
	2, 4, 2, 4, 4, 4, 4, 4, 
	4, 2, 3, 3, 3, 3, 2, 4, 
	2, 3, 2, 3, 2, 3, 3, 3, 
	3, 3, 3, 3, 4, 4, 3, 3, 
	3, 3, 3, 2, 4, 4, 4, 2, 
	3, 3, 3, 2, 1, 4, 2, 2, 
	2, 2, 2, 2, 4, 4, 4, 2, 
}

var _uri_range_lengths []byte = []byte{
	0, 0, 0, 0, 0, 1, 1, 7, 
	7, 7, 7, 7, 7, 3, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 1, 7, 7, 
	3, 3, 3, 3, 3, 3, 3, 1, 
	3, 1, 3, 1, 7, 7, 7, 7, 
	7, 7, 1, 7, 7, 7, 7, 3, 
	3, 3, 1, 1, 0, 7, 7, 3, 
	3, 3, 3, 1, 7, 7, 7, 1, 
}

var _uri_index_offsets []int16 = []int16{
	0, 0, 2, 4, 6, 9, 11, 15, 
	26, 38, 49, 61, 71, 82, 88, 98, 
	110, 120, 132, 142, 154, 166, 178, 190, 
	202, 214, 224, 235, 246, 257, 262, 272, 
	284, 290, 297, 303, 310, 316, 323, 330, 
	335, 342, 347, 354, 359, 371, 383, 394, 
	405, 416, 427, 432, 442, 454, 466, 478, 
	484, 491, 498, 503, 507, 509, 521, 531, 
	537, 543, 549, 555, 559, 571, 583, 595, 
}

var _uri_indicies []byte = []byte{
	0, 1, 2, 1, 3, 1, 4, 5, 
	1, 6, 1, 8, 9, 7, 1, 8, 
	9, 12, 7, 10, 7, 11, 7, 11, 
	7, 1, 13, 14, 8, 9, 7, 15, 
	7, 16, 7, 16, 7, 1, 13, 8, 
	9, 7, 16, 7, 16, 7, 16, 7, 
	1, 13, 17, 8, 9, 7, 16, 7, 
	16, 7, 16, 7, 1, 8, 9, 7, 
	16, 7, 18, 7, 18, 7, 1, 19, 
	8, 9, 7, 18, 7, 18, 7, 18, 
	7, 1, 8, 9, 7, 20, 7, 1, 
	8, 9, 7, 21, 7, 18, 7, 18, 
	7, 1, 13, 22, 8, 9, 7, 23, 
	7, 16, 7, 16, 7, 1, 8, 9, 
	7, 24, 7, 18, 7, 18, 7, 1, 
	13, 25, 8, 9, 7, 26, 7, 16, 
	7, 16, 7, 1, 8, 9, 7, 27, 
	7, 18, 7, 18, 7, 1, 13, 25, 
	8, 9, 7, 28, 7, 16, 7, 16, 
	7, 1, 13, 25, 8, 9, 7, 16, 
	7, 16, 7, 16, 7, 1, 13, 22, 
	8, 9, 7, 29, 7, 16, 7, 16, 
	7, 1, 13, 22, 8, 9, 7, 16, 
	7, 16, 7, 16, 7, 1, 13, 14, 
	8, 9, 7, 30, 7, 16, 7, 16, 
	7, 1, 13, 14, 8, 9, 7, 16, 
	7, 16, 7, 16, 7, 1, 32, 9, 
	7, 31, 7, 31, 7, 31, 7, 1, 
	34, 9, 35, 7, 33, 7, 33, 7, 
	33, 7, 1, 34, 9, 35, 7, 36, 
	7, 36, 7, 36, 7, 1, 34, 9, 
	35, 7, 37, 7, 37, 7, 37, 7, 
	1, 34, 9, 35, 7, 1, 39, 9, 
	7, 38, 7, 31, 7, 31, 7, 1, 
	40, 34, 9, 35, 7, 41, 7, 33, 
	7, 33, 7, 1, 8, 9, 7, 42, 
	7, 1, 43, 8, 9, 7, 44, 7, 
	1, 8, 9, 7, 45, 7, 1, 46, 
	8, 9, 7, 47, 7, 1, 8, 9, 
	7, 48, 7, 1, 8, 9, 35, 7, 
	49, 7, 1, 8, 9, 35, 7, 50, 
	7, 1, 8, 9, 35, 7, 1, 46, 
	8, 9, 7, 51, 7, 1, 46, 8, 
	9, 7, 1, 43, 8, 9, 7, 52, 
	7, 1, 43, 8, 9, 7, 1, 40, 
	34, 9, 35, 7, 53, 7, 36, 7, 
	36, 7, 1, 40, 34, 9, 35, 7, 
	37, 7, 37, 7, 37, 7, 1, 55, 
	9, 35, 7, 54, 7, 54, 7, 54, 
	7, 1, 57, 9, 35, 7, 56, 7, 
	56, 7, 56, 7, 1, 57, 9, 35, 
	7, 58, 7, 58, 7, 58, 7, 1, 
	57, 9, 35, 7, 59, 7, 59, 7, 
	59, 7, 1, 57, 9, 35, 7, 1, 
	8, 9, 7, 60, 7, 54, 7, 54, 
	7, 1, 40, 57, 9, 35, 7, 61, 
	7, 56, 7, 56, 7, 1, 40, 57, 
	9, 35, 7, 62, 7, 58, 7, 58, 
	7, 1, 40, 57, 9, 35, 7, 59, 
	7, 59, 7, 59, 7, 1, 8, 9, 
	7, 63, 7, 1, 40, 8, 9, 7, 
	64, 7, 1, 40, 8, 9, 7, 65, 
	7, 1, 40, 8, 9, 7, 1, 39, 
	9, 7, 1, 66, 1, 19, 67, 68, 
	9, 7, 18, 7, 18, 7, 18, 7, 
	1, 68, 9, 7, 16, 7, 18, 7, 
	18, 7, 1, 8, 9, 7, 69, 7, 
	1, 8, 9, 7, 70, 7, 1, 8, 
	9, 7, 71, 7, 1, 8, 9, 7, 
	72, 7, 1, 8, 9, 7, 1, 13, 
	17, 68, 9, 7, 73, 7, 16, 7, 
	16, 7, 1, 13, 17, 68, 9, 7, 
	74, 7, 16, 7, 16, 7, 1, 13, 
	17, 68, 9, 7, 16, 7, 16, 7, 
	16, 7, 1, 68, 9, 7, 1, 
}

var _uri_trans_targs []byte = []byte{
	2, 0, 3, 4, 5, 60, 6, 6, 
	6, 7, 8, 61, 25, 9, 14, 23, 
	10, 11, 61, 12, 63, 15, 16, 21, 
	17, 18, 19, 68, 20, 22, 24, 26, 
	59, 27, 30, 71, 28, 29, 31, 46, 
	32, 44, 33, 34, 42, 35, 36, 40, 
	37, 38, 39, 41, 43, 45, 47, 55, 
	48, 51, 49, 50, 52, 53, 54, 56, 
	57, 58, 5, 62, 13, 64, 65, 66, 
	67, 69, 70, 
}

var _uri_trans_actions []byte = []byte{
	0, 0, 0, 0, 7, 0, 1, 0, 
	3, 3, 1, 1, 1, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	3, 0, 3, 0, 0, 0, 0, 3, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 3, 
	0, 3, 0, 0, 0, 0, 0, 0, 
	0, 0, 9, 0, 11, 0, 0, 0, 
	0, 0, 0, 
}

var _uri_eof_actions []byte = []byte{
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 5, 5, 0, 
	0, 0, 0, 0, 5, 5, 5, 5, 
}

const uri_start int = 1
const uri_first_final int = 61
const uri_error int = 0

const uri_en_uri int = 1


//line uri_parser.rl:8


//line uri_parser.rl:32


func SIPURIParse(data []byte) *URI {
    uri := &URI{}
    p := 0 // data pointer
    cs := 0 // current state. entery point = 0
    pe := len(data)
    eof := len(data)
    m := 0 // marker

//line uri_parser.rl:53

    
//line uri_parser.go:317
	{
	cs = uri_start
	}

//line uri_parser.rl:55
    
//line uri_parser.go:324
	{
	var _klen int
	var _trans int
	var _acts int
	var _nacts uint
	var _keys int
	if p == pe {
		goto _test_eof
	}
	if cs == 0 {
		goto _out
	}
_resume:
	_keys = int(_uri_key_offsets[cs])
	_trans = int(_uri_index_offsets[cs])

	_klen = int(_uri_single_lengths[cs])
	if _klen > 0 {
		_lower := int(_keys)
		var _mid int
		_upper := int(_keys + _klen - 1)
		for {
			if _upper < _lower {
				break
			}

			_mid = _lower + ((_upper - _lower) >> 1)
			switch {
			case data[p] < _uri_trans_keys[_mid]:
				_upper = _mid - 1
			case data[p] > _uri_trans_keys[_mid]:
				_lower = _mid + 1
			default:
				_trans += int(_mid - int(_keys))
				goto _match
			}
		}
		_keys += _klen
		_trans += _klen
	}

	_klen = int(_uri_range_lengths[cs])
	if _klen > 0 {
		_lower := int(_keys)
		var _mid int
		_upper := int(_keys + (_klen << 1) - 2)
		for {
			if _upper < _lower {
				break
			}

			_mid = _lower + (((_upper - _lower) >> 1) & ^1)
			switch {
			case data[p] < _uri_trans_keys[_mid]:
				_upper = _mid - 2
			case data[p] > _uri_trans_keys[_mid + 1]:
				_lower = _mid + 2
			default:
				_trans += int((_mid - int(_keys)) >> 1)
				goto _match
			}
		}
		_trans += _klen
	}

_match:
	_trans = int(_uri_indicies[_trans])
	cs = int(_uri_trans_targs[_trans])

	if _uri_trans_actions[_trans] == 0 {
		goto _again
	}

	_acts = int(_uri_trans_actions[_trans])
	_nacts = uint(_uri_actions[_acts]); _acts++
	for ; _nacts > 0; _nacts-- {
		_acts++
		switch _uri_actions[_acts-1] {
		case 0:
//line uri_parser.rl:42
 m = p 
		case 1:
//line uri_parser.rl:43
 uri.user = string(data[m:p]) 
		case 2:
//line uri_parser.rl:44
 uri.host = string(data[m:p]) 
		case 3:
//line uri_parser.rl:45
uri.scheme = "sip"
		case 4:
//line uri_parser.rl:45
uri.scheme = "sips"
//line uri_parser.go:418
		}
	}

_again:
	if cs == 0 {
		goto _out
	}
	p++
	if p != pe {
		goto _resume
	}
	_test_eof: {}
	if p == eof {
		__acts := _uri_eof_actions[cs]
		__nacts := uint(_uri_actions[__acts]); __acts++
		for ; __nacts > 0; __nacts-- {
			__acts++
			switch _uri_actions[__acts-1] {
			case 2:
//line uri_parser.rl:44
 uri.host = string(data[m:p]) 
//line uri_parser.go:440
			}
		}
	}

	_out: {}
	}

//line uri_parser.rl:56
    if cs >= uri_first_final {
        return uri
    }
    return nil
}
